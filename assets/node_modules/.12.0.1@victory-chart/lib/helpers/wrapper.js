Object.defineProperty(exports,"__esModule",{value:true});var _uniq2=require("lodash/uniq");var _uniq3=_interopRequireDefault(_uniq2);var _partialRight2=require("lodash/partialRight");var _partialRight3=_interopRequireDefault(_partialRight2);var _isFunction2=require("lodash/isFunction");var _isFunction3=_interopRequireDefault(_isFunction2);var _flatten2=require("lodash/flatten");var _flatten3=_interopRequireDefault(_flatten2);var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);
var _react=require("react");var _react2=_interopRequireDefault(_react);
var _axis=require("./axis");var _axis2=_interopRequireDefault(_axis);
var _data=require("./data");var _data2=_interopRequireDefault(_data);
var _domain=require("./domain");var _domain2=_interopRequireDefault(_domain);
var _victoryCore=require("victory-core");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}exports.default=


{
getData:function getData(props,childComponents){
if(props.data){
return _data2.default.getData(props);
}
childComponents=childComponents||_react2.default.Children.toArray(props.children);
return this.getDataFromChildren(childComponents);
},

getDomain:function getDomain(props,axis,childComponents){
childComponents=childComponents||_react2.default.Children.toArray(props.children);
var propsDomain=_domain2.default.getDomainFromProps(props,axis);
if(propsDomain){
return propsDomain;
}
return _domain2.default.cleanDomain(this.getDomainFromChildren(props,axis,childComponents),
props,
axis);
},

setAnimationState:function setAnimationState(nextProps){
if(!this.props.animate){
return;
}
if(this.props.animate.parentState){
var nodesWillExit=this.props.animate.parentState.nodesWillExit;
var oldProps=nodesWillExit?this.props:null;
this.setState((0,_defaults3.default)({oldProps:oldProps},this.props.animate.parentState));
}else{
var oldChildren=_react2.default.Children.toArray(this.props.children);
var nextChildren=_react2.default.Children.toArray(nextProps.children);var _Transitions$getIniti=










_victoryCore.Transitions.getInitialTransitionState(oldChildren,nextChildren);var _nodesWillExit=_Transitions$getIniti.nodesWillExit;var nodesWillEnter=_Transitions$getIniti.nodesWillEnter;var childrenTransitions=_Transitions$getIniti.childrenTransitions;var nodesShouldEnter=_Transitions$getIniti.nodesShouldEnter;var nodesShouldLoad=_Transitions$getIniti.nodesShouldLoad;var nodesDoneLoad=_Transitions$getIniti.nodesDoneLoad;var nodesDoneClipPathLoad=_Transitions$getIniti.nodesDoneClipPathLoad;var nodesDoneClipPathEnter=_Transitions$getIniti.nodesDoneClipPathEnter;var nodesDoneClipPathExit=_Transitions$getIniti.nodesDoneClipPathExit;

this.setState({
nodesWillExit:_nodesWillExit,
nodesWillEnter:nodesWillEnter,
childrenTransitions:childrenTransitions,
nodesShouldEnter:nodesShouldEnter,
nodesDoneClipPathEnter:nodesDoneClipPathEnter,
nodesDoneClipPathExit:nodesDoneClipPathExit,
nodesShouldLoad:nodesShouldLoad||this.state.nodesShouldLoad,
nodesDoneLoad:nodesDoneLoad||this.state.nodesDoneLoad,
nodesDoneClipPathLoad:nodesDoneClipPathLoad||this.state.nodesDoneClipPathLoad,
oldProps:_nodesWillExit?this.props:null});

}
},

getAnimationProps:function getAnimationProps(props,child,index){var _this=this;
if(!props.animate){
return child.props.animate;
}
var getFilteredState=function getFilteredState(){
var childrenTransitions=_this.state&&_this.state.childrenTransitions;
childrenTransitions=_victoryCore.Collection.isArrayOfArrays(childrenTransitions)?
childrenTransitions[index]:childrenTransitions;
return(0,_defaults3.default)({childrenTransitions:childrenTransitions},_this.state);
};

var getTransitions=props.animate&&props.animate.getTransitions;
var state=getFilteredState();
var parentState=props.animate&&props.animate.parentState||state;
if(!getTransitions){
var getTransitionProps=_victoryCore.Transitions.getTransitionPropsFactory(
props,
state,
function(newState){return _this.setState(newState);});

getTransitions=(0,_partialRight3.default)(getTransitionProps,index);
}
return(0,_defaults3.default)({getTransitions:getTransitions,parentState:parentState},props.animate,child.props.animate);
},

getDomainFromChildren:function getDomainFromChildren(props,axis,childComponents){// eslint-disable-line max-statements, complexity, max-len
var childDomains=[];
var childDomainsLength=0;

var children=childComponents?
childComponents.slice(0):
_react2.default.Children.toArray(props.children);
var childrenLength=children.length;

var horizontalChildren=childComponents.some(function(child){return child.props.horizontal;});
var horizontal=props&&props.horizontal||horizontalChildren.length>0;
var currentAxis=_axis2.default.getCurrentAxis(axis,horizontal);

while(childrenLength>0){
var child=children[--childrenLength];

if(child.type&&(0,_isFunction3.default)(child.type.getDomain)){
var parentData=props.data?_data2.default.getData(props,axis):undefined;
var sharedProps=parentData?
(0,_assign3.default)({},child.props,{data:parentData}):child.props;
var childDomain=child.props&&child.type.getDomain(sharedProps,currentAxis);
if(childDomain){
var childDomainLength=childDomain.length;
for(var index=0;index<childDomainLength;index++){
childDomains[childDomainsLength++]=childDomain[index];
}
}
}else if(child.props&&child.props.children){
var newChildren=_react2.default.Children.toArray(child.props.children);
var newChildrenLength=newChildren.length;
for(var _index=0;_index<newChildrenLength;_index++){
children[childrenLength++]=newChildren[_index];
}
}
}

var min=_victoryCore.Collection.getMinValue(childDomains);
var max=_victoryCore.Collection.getMaxValue(childDomains);
return childDomains.length===0?
[0,1]:[min,max];
},

getDataFromChildren:function getDataFromChildren(props,childComponents){
var getData=function getData(childProps){
var data=_data2.default.getData(childProps);
return Array.isArray(data)&&data.length>0?data:undefined;
};

// Reverse the child array to maintain correct order when looping over
// children starting from the end of the array.
var children=childComponents?
childComponents.slice(0).reverse():
_react2.default.Children.toArray(props.children).reverse();

var childrenLength=children.length;

var dataArr=[];
var dataArrLength=0;

while(childrenLength>0){
var child=children[--childrenLength];

if(child.type&&(0,_isFunction3.default)(child.type.getData)){
dataArr[dataArrLength++]=child.props&&child.type.getData(child.props);
}else if(child.props&&child.props.children){
var newChildren=_react2.default.Children.toArray(child.props.children);
var newChildrenLength=newChildren.length;
for(var index=0;index<newChildrenLength;index++){
children[childrenLength++]=newChildren[index];
}
}else{
dataArr[dataArrLength++]=getData(child.props);
}
}

return dataArr;
},

getStackedDomain:function getStackedDomain(props,axis){
var propsDomain=_domain2.default.getDomainFromProps(props,axis);
if(propsDomain){
return propsDomain;
}var
horizontal=props.horizontal;
var ensureZero=function ensureZero(domain){
var isDependent=axis==="y"&&!horizontal||axis==="x"&&horizontal;
return isDependent?[Math.min.apply(Math,_toConsumableArray(domain).concat([0])),Math.max.apply(Math,_toConsumableArray(domain).concat([0]))]:domain;
};
var datasets=this.getDataFromChildren(props);
return ensureZero(_domain2.default.getDomainFromGroupedData(props,axis,datasets));
},

getColor:function getColor(calculatedProps,child,index){
// check for styles first
var style=calculatedProps.style;var
colorScale=calculatedProps.colorScale;
if(style&&style.data&&style.data.fill){
return style.data.fill;
}
colorScale=child.props&&child.props.colorScale?child.props.colorScale:colorScale;
if(!colorScale){
return undefined;
}
var colors=Array.isArray(colorScale)?
colorScale:_victoryCore.Style.getColorScale(colorScale);
return colors[index%colors.length];
},

getChildStyle:function getChildStyle(child,index,calculatedProps){var
style=calculatedProps.style;
var role=child.type&&child.type.role;
var defaultFill=role==="stack-wrapper"?
undefined:this.getColor(calculatedProps,child,index);
var defaultColor=role==="line"?
{fill:"none",stroke:defaultFill}:{fill:defaultFill};
var childStyle=child.props.style||{};
var dataStyle=(0,_defaults3.default)({},childStyle.data,(0,_assign3.default)({},style.data,defaultColor));
var labelsStyle=(0,_defaults3.default)({},childStyle.labels,style.labels);
return{
parent:style.parent,
data:dataStyle,
labels:labelsStyle};

},

getStringsFromCategories:function getStringsFromCategories(childComponents,axis){// eslint-disable-line max-statements
var strings=[];
var stringsLength=0;

var children=childComponents.slice(0);
var childrenLength=children.length;

while(childrenLength>0){
var child=children[--childrenLength];

if(child.props&&child.props.categories){
var newStrings=_data2.default.getStringsFromCategories(child.props,axis);
var newStringsLength=newStrings.length;
for(var index=0;index<newStringsLength;index++){
strings[stringsLength++]=newStrings[index];
}
}else if(child.props&&child.props.children){
var newChildren=_react2.default.Children.toArray(child.props.children);
var newChildrenLength=newChildren.length;
for(var _index2=0;_index2<newChildrenLength;_index2++){
children[childrenLength++]=newChildren[_index2];
}
}
}

return strings;
},

getStringsFromData:function getStringsFromData(childComponents,axis){// eslint-disable-line max-statements
var strings=[];
var stringsLength=0;

var children=childComponents.slice(0);
var childrenLength=children.length;

while(childrenLength>0){
var child=children[--childrenLength];

if(child.props&&child.props.data){
var newStrings=_victoryCore.Helpers.getStringsFromData(child.props,axis);
var newStringsLength=newStrings.length;
for(var index=0;index<newStringsLength;index++){
strings[stringsLength++]=newStrings[index];
}
}else if(child.type&&(0,_isFunction3.default)(child.type.getData)){
var data=(0,_flatten3.default)(child.type.getData(child.props));
var attr=axis==="x"?"xName":"yName";
for(var _index3=0;_index3<data.length;_index3++){
var datum=data[_index3];
if(datum[attr]){
strings[stringsLength++]=datum[attr];
}
}
}else if(child.props&&child.props.children){
var newChildren=_react2.default.Children.toArray(child.props.children);
var newChildrenLength=newChildren.length;
for(var _index4=0;_index4<newChildrenLength;_index4++){
children[childrenLength++]=newChildren[_index4];
}
}
}

return strings;
},

getStringsFromChildren:function getStringsFromChildren(props,axis,childComponents){
childComponents=childComponents||_react2.default.Children.toArray(props.children);
var axisComponent=_axis2.default.getAxisComponent(childComponents,axis);
var axisStrings=axisComponent?_data2.default.getStringsFromAxes(axisComponent.props,axis):[];
var categoryStrings=this.getStringsFromCategories(childComponents,axis);
var dataStrings=this.getStringsFromData(childComponents,axis);
return(0,_uniq3.default)((0,_flatten3.default)([].concat(_toConsumableArray(categoryStrings),_toConsumableArray(dataStrings),_toConsumableArray(axisStrings))));
},

getCategories:function getCategories(props,axis){
var categories=_data2.default.getCategories(props,axis)||
this.getStringsFromChildren(props,axis);
return categories.length>0?categories:undefined;
},

getY0:function getY0(datum,index,calculatedProps){var
datasets=calculatedProps.datasets;
var y=datum.y;
var previousDataSets=datasets.slice(0,index);
var previousPoints=previousDataSets.reduce(function(prev,dataset){
return prev.concat(dataset.
filter(function(previousDatum){return datum.x instanceof Date?
previousDatum.x.getTime()===datum.x.getTime():
previousDatum.x===datum.x;}).
map(function(previousDatum){return previousDatum.y||0;}));

},[]);
return previousPoints.reduce(function(memo,value){
var sameSign=y<0&&value<0||y>=0&&value>=0;
return sameSign?memo+value:memo;
},0);
}};