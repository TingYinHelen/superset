Object.defineProperty(exports,"__esModule",{value:true});var _defaults2=require("lodash/defaults");var _defaults3=_interopRequireDefault(_defaults2);var _assign2=require("lodash/assign");var _assign3=_interopRequireDefault(_assign2);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require("react");var _react2=_interopRequireDefault(_react);
var _index=require("../victory-util/index");
var _victoryLabel=require("../victory-label/victory-label");var _victoryLabel2=_interopRequireDefault(_victoryLabel);
var _index2=require("../victory-primitives/index");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}


var defaultStyles={
stroke:"black",
strokeWidth:1,
fill:"#f0f0f0"};


var defaultLabelStyles={
fill:"#252525",
fontSize:14,
fontFamily:"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif",
stroke:"transparent",
padding:5};var


VictoryTooltip=function(_React$Component){_inherits(VictoryTooltip,_React$Component);function VictoryTooltip(){_classCallCheck(this,VictoryTooltip);return _possibleConstructorReturn(this,Object.getPrototypeOf(VictoryTooltip).apply(this,arguments));}_createClass(VictoryTooltip,[{key:"getEvaluatedProps",value:function getEvaluatedProps(

























































































































































































props){var

horizontal=

props.horizontal;var datum=props.datum;var pointerLength=props.pointerLength;var pointerWidth=props.pointerWidth;var cornerRadius=props.cornerRadius;var width=props.width;var height=props.height;var orientation=props.orientation;var dx=props.dx;var dy=props.dy;var text=props.text;var active=props.active;
var style=_index.Helpers.evaluateStyle(props.style,datum);
var flyoutStyle=_index.Helpers.evaluateStyle(props.flyoutStyle,datum);
var padding=flyoutStyle&&flyoutStyle.padding||0;
var defaultDx=horizontal?padding:0;
var defaultDy=horizontal?0:padding;
var getDefaultOrientation=function getDefaultOrientation(){
var positive=horizontal?"right":"top";
var negative=horizontal?"left":"bottom";
return datum&&datum.y<0?negative:positive;
};
return(0,_assign3.default)(
{},
props,
{
style:style,
flyoutStyle:flyoutStyle,
dx:dx!==undefined?_index.Helpers.evaluateProp(dx,datum):defaultDx,
dy:dy!==undefined?_index.Helpers.evaluateProp(dy,datum):defaultDy,
cornerRadius:_index.Helpers.evaluateProp(cornerRadius,datum),
pointerLength:_index.Helpers.evaluateProp(pointerLength,datum),
pointerWidth:_index.Helpers.evaluateProp(pointerWidth,datum),
orientation:_index.Helpers.evaluateProp(orientation,datum)||getDefaultOrientation(),
width:_index.Helpers.evaluateProp(width,datum),
height:_index.Helpers.evaluateProp(height,datum),
active:_index.Helpers.evaluateProp(active,datum),
text:_index.Helpers.evaluateProp(text,datum)});


}},{key:"getCalculatedValues",value:function getCalculatedValues(

props){var
style=props.style;var text=props.text;var datum=props.datum;
var baseLabelStyle=style?
(0,_defaults3.default)({},style,defaultLabelStyles):defaultLabelStyles;
var baseFlyoutStyle=props.flyoutStyle?
(0,_defaults3.default)({},props.flyoutStyle,defaultStyles):defaultStyles;
var labelStyle=_index.Helpers.evaluateStyle(baseLabelStyle,datum);
var flyoutStyle=_index.Helpers.evaluateStyle(baseFlyoutStyle,datum);
var labelSize=_index.TextSize.approximateTextSize(text,labelStyle);
var flyoutDimensions=this.getDimensions(props,labelSize,labelStyle);
var flyoutCenter=this.getFlyoutCenter(props,flyoutDimensions);
return{labelStyle:labelStyle,flyoutStyle:flyoutStyle,labelSize:labelSize,flyoutDimensions:flyoutDimensions,flyoutCenter:flyoutCenter};
}},{key:"getFlyoutCenter",value:function getFlyoutCenter(

props,dimensions){var
x=props.x;var y=props.y;var dx=props.dx;var dy=props.dy;var pointerLength=props.pointerLength;var orientation=props.orientation;var
height=dimensions.height;var width=dimensions.width;
var sign=orientation==="right"||orientation==="top"?1:-1;
return{
x:orientation==="left"||orientation==="right"?
x+sign*(pointerLength+width/2+dx):x+sign*dx,
y:orientation==="top"||orientation==="bottom"?
y-sign*(pointerLength+height/2+dy):y-sign*dy};

}},{key:"getDimensions",value:function getDimensions(

props,labelSize,labelStyle){var
orientation=props.orientation;var cornerRadius=props.cornerRadius;var pointerLength=props.pointerLength;var pointerWidth=props.pointerWidth;
var padding=labelStyle&&labelStyle.padding||0;
var getHeight=function getHeight(){
var calculatedHeight=labelSize.height+padding;
var minHeight=orientation==="top"||orientation==="bottom"?
2*cornerRadius:2*cornerRadius+pointerWidth;
return Math.max(minHeight,calculatedHeight);
};
var getWidth=function getWidth(){
var calculatedWidth=labelSize.width+padding;
var minWidth=orientation==="left"||orientation==="right"?
2*cornerRadius+pointerLength:2*cornerRadius;
return Math.max(minWidth,calculatedWidth);
};
return{
height:props.height||getHeight(props,labelSize,orientation)+padding/2,
width:props.width||getWidth(props,labelSize,orientation)+padding};

}},{key:"getLabelProps",value:function getLabelProps(

props,calculatedValues){var
flyoutCenter=calculatedValues.flyoutCenter;var labelStyle=calculatedValues.labelStyle;var labelSize=calculatedValues.labelSize;var flyoutDimensions=calculatedValues.flyoutDimensions;var
text=props.text;var datum=props.datum;var labelComponent=props.labelComponent;var index=props.index;
var textAnchor=labelStyle.textAnchor||"middle";
var getLabelX=function getLabelX(){
var sign=textAnchor==="end"?-1:1;
return flyoutCenter.x-sign*(flyoutDimensions.width-labelSize.width);
};
return(0,_defaults3.default)(
{},
labelComponent.props,
{
key:"label-"+index,
text:text,datum:datum,textAnchor:textAnchor,
style:labelStyle,
x:!labelStyle.textAnchor||labelStyle.textAnchor==="middle"?
flyoutCenter.x:getLabelX(),
y:flyoutCenter.y,
verticalAnchor:"middle",
angle:labelStyle.angle});


}},{key:"getFlyoutProps",value:function getFlyoutProps(

props,calculatedValues){var
flyoutDimensions=calculatedValues.flyoutDimensions;var flyoutStyle=calculatedValues.flyoutStyle;var

x=

props.x;var y=props.y;var dx=props.dx;var dy=props.dy;var orientation=props.orientation;var pointerLength=props.pointerLength;var pointerWidth=props.pointerWidth;var cornerRadius=props.cornerRadius;var events=props.events;var flyoutComponent=props.flyoutComponent;var index=props.index;
return(0,_defaults3.default)(
{},
flyoutComponent.props,
{
x:x,y:y,dx:dx,dy:dy,orientation:orientation,pointerLength:pointerLength,pointerWidth:pointerWidth,cornerRadius:cornerRadius,events:events,
key:"flyout-"+index,
width:flyoutDimensions.width,
height:flyoutDimensions.height,
style:flyoutStyle});


}},{key:"renderTooltip",value:function renderTooltip(

props){
var evaluatedProps=this.getEvaluatedProps(props);var
flyoutComponent=evaluatedProps.flyoutComponent;var labelComponent=evaluatedProps.labelComponent;var groupComponent=evaluatedProps.groupComponent;
var calculatedValues=this.getCalculatedValues(evaluatedProps);
var children=[
_react2.default.cloneElement(flyoutComponent,this.getFlyoutProps(evaluatedProps,calculatedValues)),
_react2.default.cloneElement(labelComponent,this.getLabelProps(evaluatedProps,calculatedValues))];

return _react2.default.cloneElement(groupComponent,{role:"presentation"},children);
}

// this will be overridden in victory-core-native
},{key:"renderEmpty",value:function renderEmpty(){
return null;
}},{key:"render",value:function render()

{
return this.props.active?this.renderTooltip(this.props):this.renderEmpty();
}}]);return VictoryTooltip;}(_react2.default.Component);VictoryTooltip.displayName="VictoryTooltip";VictoryTooltip.propTypes={/**
     * Specifies whether the flyout will be displayed
     */active:_react.PropTypes.oneOfType([_react.PropTypes.bool,_react.PropTypes.func]),/**
     * Victory components can pass a datum prop to their tooltip component. This can
     * be used to calculate functional styles, and determine child text
     */datum:_react.PropTypes.object,/**
     * Labels that apply to an entire data series will recieve the entire series
     * as `data` instead of an individual datum prop.
     */data:_react.PropTypes.array,/**
     * The events prop attaches arbitrary event handlers to the tooltip component.
     * Event handlers are currently only called with their corresponding events.
     * @examples {(evt) => alert(`x: ${evt.clientX}, y: ${evt.clientY}`)}
     */events:_react.PropTypes.object,/**
     * all Victory components will pass a text prop to their label component.
     * This defines the content of the label.
     */text:_react.PropTypes.oneOfType([_react.PropTypes.string,_react.PropTypes.number,_react.PropTypes.func]),/**
     * The style prop applies CSS properties to the rendered `<path>` element.
     */style:_react.PropTypes.object,/**
     * The style prop applies CSS properties to the rendered `<text>` element.
     */flyoutStyle:_react.PropTypes.object,/**
     * The x prop defines the x coordinate to use as a basis for horizontal
     * positioning.
     */x:_react.PropTypes.number,/**
     * The y prop defines the y coordinate to use as a basis for vertical
     * positioning.
     */y:_react.PropTypes.number,/**
     * The dx prop defines a horizontal shift from the `x` coordinate.
     */dx:_react.PropTypes.oneOfType([_react.PropTypes.number,_react.PropTypes.func]),/**
     * The dy prop defines a vertical shift from the `y` coordinate.
     */dy:_react.PropTypes.oneOfType([_react.PropTypes.number,_react.PropTypes.func]),/**
     * The width prop defines the width of the tooltip flyout.
     */width:_react.PropTypes.oneOfType([_index.PropTypes.nonNegative,_react.PropTypes.func]),/**
     * The height prop defines the height of the tooltip flyout.
     */height:_react.PropTypes.oneOfType([_index.PropTypes.nonNegative,_react.PropTypes.func]),/**
     * The orientation prop determines which side of the (x, y) coordinate the tooltip
     * be rendered on. This prop can be given as "top", "bottom", "left", "right", or
     * as a function of datum that returns one of these values.
     */orientation:_react.PropTypes.oneOfType([_react.PropTypes.oneOf(["top","bottom","left","right"]),_react.PropTypes.func]),/**
     * The pointerLength prop determines the length of the pointer extending from the flyout
     */pointerLength:_react.PropTypes.oneOfType([_index.PropTypes.nonNegative,_react.PropTypes.func]),/**
     * The pointerLength prop determines the width of the base of the triangular pointer
     * extending from the flyout
     */pointerWidth:_react.PropTypes.oneOfType([_index.PropTypes.nonNegative,_react.PropTypes.func]),/**
     * The cornerRadius prop determines corner radius of the flyout container
     */cornerRadius:_react.PropTypes.oneOfType([_index.PropTypes.nonNegative,_react.PropTypes.func]),/**
     * The horizontal prop determines whether to plot the flyouts to the left / right
     * of the (x, y) coordinate rather than top / bottom. This is useful when an orientation
     * prop is not provided, and data will determine the default orientation. i.e. negative
     * values result in a left orientation and positive values will result in a y orientation
     * by default
     */horizontal:_react.PropTypes.bool,/**
     * The labelComponent prop takes in an entire label component which will be used
     * to create labels for each tooltip. The new element created from
     * the passed labelComponent will be supplied with the following properties:
     * x, y, index, datum, verticalAnchor, textAnchor, angle, style, text, and events.
     * any of these props may be overridden by passing in props to the supplied component,
     * or modified or ignored within the custom component itself. If labelComponent is omitted,
     * a new VictoryLabel will be created with props described above.
     */labelComponent:_react.PropTypes.element,/**
     * The flyoutComponent prop takes in an entire flyout component which will be used
     * to create the container path for each tooltip. The new element created from
     * the passed flyoutComponent will be supplied with the following properties:
     * x, y, dx, dy, index, datum, cornerRadius, pointerLength, pointerWidth, width, height,
     * style, and events. Any of these props may be overridden by passing in props to
     * the supplied component, or modified or ignored within the custom component itself.
     * If labelComponent is omitted, a a default Flyout component will be created with
     * props described above.
     */flyoutComponent:_react.PropTypes.element,/**
     * The groupComponent prop takes an entire component which will be used to
     * create group elements for use within container elements. This prop defaults
     * to a <g> tag.
     */groupComponent:_react.PropTypes.element,/**
     * Victory components pass an index prop to their tooltip component.
     */index:_react.PropTypes.number};VictoryTooltip.defaultProps={active:false,cornerRadius:5,pointerLength:10,pointerWidth:10,labelComponent:_react2.default.createElement(_victoryLabel2.default,null),flyoutComponent:_react2.default.createElement(_index2.Flyout,null),groupComponent:_react2.default.createElement("g",null)};VictoryTooltip.defaultEvents=[{target:"data",eventHandlers:{onMouseOver:function onMouseOver(){return{target:"labels",mutation:function mutation(){return{active:true};}};},onMouseOut:function onMouseOut(){return{target:"labels",mutation:function mutation(){return{active:false};}};}}}];exports.default=VictoryTooltip;